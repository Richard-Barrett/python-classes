%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 210 200
%%Creator: yExport 1.3
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, November 5, 2012 10:58:50 PM EET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
210 200 setpagesize
0 0 0 0 setmargins
0 0 setorigin
210 200 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
210.000 0.00000 l
210.000 200.000 l
0.00000 200.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 210 200 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 15.0000 15.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-15.0000 -15.0000 m
195.000 -15.0000 l
195.000 185.000 l
-15.0000 185.000 l
-15.0000 -15.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 15.0000 15.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 15.0000 15.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 15.0000 15.0000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
[ 51.0000 0.00000 0.00000 51.0000 17.0000 62.0000 ] concat
<<
/ImageType 1
/Width 51  /Height 51
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [51 0 0 51 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/gfhTCL'SbNFI?[/-!OV2P;BRM:+?KU7#6>"C0VRI2SZ*sUq<uY]s"$MskAntude\;OT?gk'IEK\U
5kDr-bgYfu3#k,bg<3*A_gr"jg7G5U&89hcG-tL*(5r!9r[o^1+i&X5'/FqA@mh>ua5(XB>V7Cfa`'6+
G.X;?k=o!qp3Jk]csT2+n4'sE,*k%jK0cQgW`H0s;Q3bL^<2=8#dmhF)YP<&?bYO!Vp#.k-8,Xa7K[6d
T22:]03:;`QO$9_dr:u5[LJY5132fBM/k<We*3+`huJ_Vj+^u1,*=6U&K?^!'8]+(PCX#X5#%^VmYrr,
lh-^Bk[6$0_c8Z9%Klio$6hSL%,qh:e;^&[7O,W6&R65a+K7&CA6,**3_6Bg556;6;)_ZTWDr`m52E"?
mYrr/$n(M"RPPnY8]lK",>HWD8XX5:%u>lnhDh_'LQ#B%V2]2!g6adqNG2nVQo:h$Bk.1Z(a7m'57f_+
IuU_kn=Q=aLR#oD0kX-/Qcj2%lnndn]g2pX6EsXOeWMM@*M4q*rVG[CQ0`p8It^4?9ou*c%&sU8j[pk`
0^JE.GWai!2P,l`DrM0-$0$rU)/>mH\B8Ei0\c!gCc5c:pN0IK@jZ(0[V`o*7s`<oR'Ip%"Q;U]2Oh(k
lg;P<g4$g"$/gg0W'"!e>ugMLU6p*0E1l.s148hOMu04TDra@36*\gq':GAHK`Hl7JLPSk]!!%j;/IY2
.2>?A'g^bP6%c.WmC_3aT&L1%;a%&cJiLRBFWu!&Wlm%O>$>+EYA]nJ,Dc~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [25.0 70.0 55.0 100.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
25.0000 74.0000 m
25.0000 96.0000 l
25.0000 98.2091 26.7909 100.000 29.0000 100.000  c
51.0000 100.000 l
53.2091 100.000 55.0000 98.2091 55.0000 96.0000  c
55.0000 74.0000 l
55.0000 71.7909 53.2091 70.0000 51.0000 70.0000  c
29.0000 70.0000 l
26.7909 70.0000 25.0000 71.7909 25.0000 74.0000  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
25.0000 74.0000 m
25.0000 96.0000 l
25.0000 98.2091 26.7909 100.000 29.0000 100.000  c
51.0000 100.000 l
53.2091 100.000 55.0000 98.2091 55.0000 96.0000  c
55.0000 74.0000 l
55.0000 71.7909 53.2091 70.0000 51.0000 70.0000  c
29.0000 70.0000 l
26.7909 70.0000 25.0000 71.7909 25.0000 74.0000  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
40.6562 80.5078 m
40.6562 84.8516 l
45.0156 84.8516 l
45.0156 86.1797 l
40.6562 86.1797 l
40.6562 90.5391 l
39.3438 90.5391 l
39.3438 86.1797 l
35.0000 86.1797 l
35.0000 84.8516 l
39.3438 84.8516 l
39.3438 80.5078 l
40.6562 80.5078 l
h
f
2 J
10.0000 M
Q
q
q
[ 51.0000 0.00000 0.00000 51.0000 -8.00000 132.000 ] concat
<<
/ImageType 1
/Width 51  /Height 51
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [51 0 0 51 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/gfhTCL'SbNFI?[/-!OV2P;BRM:+?KU7#6>"C0VRI2SZ*sUq<uY]s"$MskAntude\;OT?gk'IEK\U
5kDr-bgYfu3#k,bg<3*A_gr"jg7G5U&89hcG-tL*(5r!9r[o^1+i&X5'/FqA@mh>ua5(XB>V7Cfa`'6+
G.X;?k=o!qp3Jk]csT2+n4'sE,*k%jK0cQgW`H0s;Q3bL^<2=8#dmhF)YP<&?bYO!Vp#.k-8,Xa7K[6d
T22:]03:;`QO$9_dr:u5[LJY5132fBM/k<We*3+`huJ_Vj+^u1,*=6U&K?^!'8]+(PCX#X5#%^VmYrr,
lh-^Bk[6$0_c8Z9%Klio$6hSL%,qh:e;^&[7O,W6&R65a+K7&CA6,**3_6Bg556;6;)_ZTWDr`m52E"?
mYrr/$n(M"RPPnY8]lK",>HWD8XX5:%u>lnhDh_'LQ#B%V2]2!g6adqNG2nVQo:h$Bk.1Z(a7m'57f_+
IuU_kn=Q=aLR#oD0kX-/Qcj2%lnndn]g2pX6EsXOeWMM@*M4q*rVG[CQ0`p8It^4?9ou*c%&sU8j[pk`
0^JE.GWai!2P,l`DrM0-$0$rU)/>mH\B8Ei0\c!gCc5c:pN0IK@jZ(0[V`o*7s`<oR'Ip%"Q;U]2Oh(k
lg;P<g4$g"$/gg0W'"!e>ugMLU6p*0E1l.s148hOMu04TDra@36*\gq':GAHK`Hl7JLPSk]!!%j;/IY2
.2>?A'g^bP6%c.WmC_3aT&L1%;a%&cJiLRBFWu!&Wlm%O>$>+EYA]nJ,Dc~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 140.0 30.0 170.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
0.00000 144.000 m
0.00000 166.000 l
0.00000 168.209 1.79086 170.000 4.00000 170.000  c
26.0000 170.000 l
28.2091 170.000 30.0000 168.209 30.0000 166.000  c
30.0000 144.000 l
30.0000 141.791 28.2091 140.000 26.0000 140.000  c
4.00000 140.000 l
1.79086 140.000 0.00000 141.791 0.00000 144.000  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
0.00000 144.000 m
0.00000 166.000 l
0.00000 168.209 1.79086 170.000 4.00000 170.000  c
26.0000 170.000 l
28.2091 170.000 30.0000 168.209 30.0000 166.000  c
30.0000 144.000 l
30.0000 141.791 28.2091 140.000 26.0000 140.000  c
4.00000 140.000 l
1.79086 140.000 0.00000 141.791 0.00000 144.000  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
11.8945 159.211 m
14.4727 159.211 l
14.4727 150.305 l
11.6758 150.867 l
11.6758 149.430 l
14.4570 148.867 l
16.0352 148.867 l
16.0352 159.211 l
18.6133 159.211 l
18.6133 160.539 l
11.8945 160.539 l
11.8945 159.211 l
h
f
2 J
10.0000 M
Q
q
q
[ 51.0000 0.00000 0.00000 51.0000 42.0000 132.000 ] concat
<<
/ImageType 1
/Width 51  /Height 51
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [51 0 0 51 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/gfhTCL'SbNFI?[/-!OV2P;BRM:+?KU7#6>"C0VRI2SZ*sUq<uY]s"$MskAntude\;OT?gk'IEK\U
5kDr-bgYfu3#k,bg<3*A_gr"jg7G5U&89hcG-tL*(5r!9r[o^1+i&X5'/FqA@mh>ua5(XB>V7Cfa`'6+
G.X;?k=o!qp3Jk]csT2+n4'sE,*k%jK0cQgW`H0s;Q3bL^<2=8#dmhF)YP<&?bYO!Vp#.k-8,Xa7K[6d
T22:]03:;`QO$9_dr:u5[LJY5132fBM/k<We*3+`huJ_Vj+^u1,*=6U&K?^!'8]+(PCX#X5#%^VmYrr,
lh-^Bk[6$0_c8Z9%Klio$6hSL%,qh:e;^&[7O,W6&R65a+K7&CA6,**3_6Bg556;6;)_ZTWDr`m52E"?
mYrr/$n(M"RPPnY8]lK",>HWD8XX5:%u>lnhDh_'LQ#B%V2]2!g6adqNG2nVQo:h$Bk.1Z(a7m'57f_+
IuU_kn=Q=aLR#oD0kX-/Qcj2%lnndn]g2pX6EsXOeWMM@*M4q*rVG[CQ0`p8It^4?9ou*c%&sU8j[pk`
0^JE.GWai!2P,l`DrM0-$0$rU)/>mH\B8Ei0\c!gCc5c:pN0IK@jZ(0[V`o*7s`<oR'Ip%"Q;U]2Oh(k
lg;P<g4$g"$/gg0W'"!e>ugMLU6p*0E1l.s148hOMu04TDra@36*\gq':GAHK`Hl7JLPSk]!!%j;/IY2
.2>?A'g^bP6%c.WmC_3aT&L1%;a%&cJiLRBFWu!&Wlm%O>$>+EYA]nJ,Dc~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [50.0 140.0 80.0 170.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
50.0000 144.000 m
50.0000 166.000 l
50.0000 168.209 51.7909 170.000 54.0000 170.000  c
76.0000 170.000 l
78.2091 170.000 80.0000 168.209 80.0000 166.000  c
80.0000 144.000 l
80.0000 141.791 78.2091 140.000 76.0000 140.000  c
54.0000 140.000 l
51.7909 140.000 50.0000 141.791 50.0000 144.000  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
50.0000 144.000 m
50.0000 166.000 l
50.0000 168.209 51.7909 170.000 54.0000 170.000  c
76.0000 170.000 l
78.2091 170.000 80.0000 168.209 80.0000 166.000  c
80.0000 144.000 l
80.0000 141.791 78.2091 140.000 76.0000 140.000  c
54.0000 140.000 l
51.7909 140.000 50.0000 141.791 50.0000 144.000  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
62.9883 159.211 m
68.4883 159.211 l
68.4883 160.539 l
61.0820 160.539 l
61.0820 159.211 l
61.6862 158.586 62.5039 157.753 63.5352 156.711  c
64.5664 155.669 65.2174 154.997 65.4883 154.695  c
65.9883 154.122 66.3398 153.641 66.5430 153.250  c
66.7461 152.859 66.8477 152.471 66.8477 152.086  c
66.8477 151.471 66.6289 150.969 66.1914 150.578  c
65.7539 150.188 65.1862 149.992 64.4883 149.992  c
63.9987 149.992 63.4779 150.078 62.9258 150.250  c
62.3737 150.422 61.7852 150.680 61.1602 151.023  c
61.1602 149.430 l
61.7956 149.180 62.3893 148.990 62.9414 148.859  c
63.4935 148.729 63.9987 148.664 64.4570 148.664  c
65.6654 148.664 66.6289 148.966 67.3477 149.570  c
68.0664 150.174 68.4258 150.982 68.4258 151.992  c
68.4258 152.471 68.3372 152.924 68.1602 153.352  c
67.9831 153.779 67.6549 154.284 67.1758 154.867  c
67.0508 155.023 66.6393 155.461 65.9414 156.180  c
65.2435 156.898 64.2591 157.909 62.9883 159.211  c
h
f
2 J
10.0000 M
Q
q
q
[ 51.0000 0.00000 0.00000 51.0000 67.0000 -8.00000 ] concat
<<
/ImageType 1
/Width 51  /Height 51
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [51 0 0 51 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/gfhTCL'SbNFI?[/-!OV2P;BRM:+?KU7#6>"C0VRI2SZ*sUq<uY]s"$MskAntude\;OT?gk'IEK\U
5kDr-bgYfu3#k,bg<3*A_gr"jg7G5U&89hcG-tL*(5r!9r[o^1+i&X5'/FqA@mh>ua5(XB>V7Cfa`'6+
G.X;?k=o!qp3Jk]csT2+n4'sE,*k%jK0cQgW`H0s;Q3bL^<2=8#dmhF)YP<&?bYO!Vp#.k-8,Xa7K[6d
T22:]03:;`QO$9_dr:u5[LJY5132fBM/k<We*3+`huJ_Vj+^u1,*=6U&K?^!'8]+(PCX#X5#%^VmYrr,
lh-^Bk[6$0_c8Z9%Klio$6hSL%,qh:e;^&[7O,W6&R65a+K7&CA6,**3_6Bg556;6;)_ZTWDr`m52E"?
mYrr/$n(M"RPPnY8]lK",>HWD8XX5:%u>lnhDh_'LQ#B%V2]2!g6adqNG2nVQo:h$Bk.1Z(a7m'57f_+
IuU_kn=Q=aLR#oD0kX-/Qcj2%lnndn]g2pX6EsXOeWMM@*M4q*rVG[CQ0`p8It^4?9ou*c%&sU8j[pk`
0^JE.GWai!2P,l`DrM0-$0$rU)/>mH\B8Ei0\c!gCc5c:pN0IK@jZ(0[V`o*7s`<oR'Ip%"Q;U]2Oh(k
lg;P<g4$g"$/gg0W'"!e>ugMLU6p*0E1l.s148hOMu04TDra@36*\gq':GAHK`Hl7JLPSk]!!%j;/IY2
.2>?A'g^bP6%c.WmC_3aT&L1%;a%&cJiLRBFWu!&Wlm%O>$>+EYA]nJ,Dc~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [75.0 0.0 105.0 30.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
75.0000 4.00000 m
75.0000 26.0000 l
75.0000 28.2091 76.7909 30.0000 79.0000 30.0000  c
101.000 30.0000 l
103.209 30.0000 105.000 28.2091 105.000 26.0000  c
105.000 4.00000 l
105.000 1.79086 103.209 0.00000 101.000 0.00000  c
79.0000 0.00000 l
76.7909 0.00000 75.0000 1.79086 75.0000 4.00000  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
75.0000 4.00000 m
75.0000 26.0000 l
75.0000 28.2091 76.7909 30.0000 79.0000 30.0000  c
101.000 30.0000 l
103.209 30.0000 105.000 28.2091 105.000 26.0000  c
105.000 4.00000 l
105.000 1.79086 103.209 0.00000 101.000 0.00000  c
79.0000 0.00000 l
76.7909 0.00000 75.0000 1.79086 75.0000 4.00000  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
90.6562 10.5078 m
90.6562 14.8516 l
95.0156 14.8516 l
95.0156 16.1797 l
90.6562 16.1797 l
90.6562 20.5391 l
89.3438 20.5391 l
89.3438 16.1797 l
85.0000 16.1797 l
85.0000 14.8516 l
89.3438 14.8516 l
89.3438 10.5078 l
90.6562 10.5078 l
h
f
2 J
10.0000 M
Q
q
q
[ 51.0000 0.00000 0.00000 51.0000 117.000 62.0000 ] concat
<<
/ImageType 1
/Width 51  /Height 51
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [51 0 0 51 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/gfhTCL'SbNFI?[/-!OV2P;BRM:+?KU7#6>"C0VRI2SZ*sUq<uY]s"$MskAntude\;OT?gk'IEK\U
5kDr-bgYfu3#k,bg<3*A_gr"jg7G5U&89hcG-tL*(5r!9r[o^1+i&X5'/FqA@mh>ua5(XB>V7Cfa`'6+
G.X;?k=o!qp3Jk]csT2+n4'sE,*k%jK0cQgW`H0s;Q3bL^<2=8#dmhF)YP<&?bYO!Vp#.k-8,Xa7K[6d
T22:]03:;`QO$9_dr:u5[LJY5132fBM/k<We*3+`huJ_Vj+^u1,*=6U&K?^!'8]+(PCX#X5#%^VmYrr,
lh-^Bk[6$0_c8Z9%Klio$6hSL%,qh:e;^&[7O,W6&R65a+K7&CA6,**3_6Bg556;6;)_ZTWDr`m52E"?
mYrr/$n(M"RPPnY8]lK",>HWD8XX5:%u>lnhDh_'LQ#B%V2]2!g6adqNG2nVQo:h$Bk.1Z(a7m'57f_+
IuU_kn=Q=aLR#oD0kX-/Qcj2%lnndn]g2pX6EsXOeWMM@*M4q*rVG[CQ0`p8It^4?9ou*c%&sU8j[pk`
0^JE.GWai!2P,l`DrM0-$0$rU)/>mH\B8Ei0\c!gCc5c:pN0IK@jZ(0[V`o*7s`<oR'Ip%"Q;U]2Oh(k
lg;P<g4$g"$/gg0W'"!e>ugMLU6p*0E1l.s148hOMu04TDra@36*\gq':GAHK`Hl7JLPSk]!!%j;/IY2
.2>?A'g^bP6%c.WmC_3aT&L1%;a%&cJiLRBFWu!&Wlm%O>$>+EYA]nJ,Dc~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [125.0 70.0 155.0 100.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
125.000 74.0000 m
125.000 96.0000 l
125.000 98.2091 126.791 100.000 129.000 100.000  c
151.000 100.000 l
153.209 100.000 155.000 98.2091 155.000 96.0000  c
155.000 74.0000 l
155.000 71.7909 153.209 70.0000 151.000 70.0000  c
129.000 70.0000 l
126.791 70.0000 125.000 71.7909 125.000 74.0000  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
125.000 74.0000 m
125.000 96.0000 l
125.000 98.2091 126.791 100.000 129.000 100.000  c
151.000 100.000 l
153.209 100.000 155.000 98.2091 155.000 96.0000  c
155.000 74.0000 l
155.000 71.7909 153.209 70.0000 151.000 70.0000  c
129.000 70.0000 l
126.791 70.0000 125.000 71.7909 125.000 74.0000  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
137.895 85.5078 m
142.113 85.5078 l
142.113 86.7891 l
137.895 86.7891 l
137.895 85.5078 l
h
f
2 J
10.0000 M
Q
q
q
[ 51.0000 0.00000 0.00000 51.0000 92.0000 132.000 ] concat
<<
/ImageType 1
/Width 51  /Height 51
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [51 0 0 51 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/gfhTCL'SbNFI?[/-!OV2P;BRM:+?KU7#6>"C0VRI2SZ*sUq<uY]s"$MskAntude\;OT?gk'IEK\U
5kDr-bgYfu3#k,bg<3*A_gr"jg7G5U&89hcG-tL*(5r!9r[o^1+i&X5'/FqA@mh>ua5(XB>V7Cfa`'6+
G.X;?k=o!qp3Jk]csT2+n4'sE,*k%jK0cQgW`H0s;Q3bL^<2=8#dmhF)YP<&?bYO!Vp#.k-8,Xa7K[6d
T22:]03:;`QO$9_dr:u5[LJY5132fBM/k<We*3+`huJ_Vj+^u1,*=6U&K?^!'8]+(PCX#X5#%^VmYrr,
lh-^Bk[6$0_c8Z9%Klio$6hSL%,qh:e;^&[7O,W6&R65a+K7&CA6,**3_6Bg556;6;)_ZTWDr`m52E"?
mYrr/$n(M"RPPnY8]lK",>HWD8XX5:%u>lnhDh_'LQ#B%V2]2!g6adqNG2nVQo:h$Bk.1Z(a7m'57f_+
IuU_kn=Q=aLR#oD0kX-/Qcj2%lnndn]g2pX6EsXOeWMM@*M4q*rVG[CQ0`p8It^4?9ou*c%&sU8j[pk`
0^JE.GWai!2P,l`DrM0-$0$rU)/>mH\B8Ei0\c!gCc5c:pN0IK@jZ(0[V`o*7s`<oR'Ip%"Q;U]2Oh(k
lg;P<g4$g"$/gg0W'"!e>ugMLU6p*0E1l.s148hOMu04TDra@36*\gq':GAHK`Hl7JLPSk]!!%j;/IY2
.2>?A'g^bP6%c.WmC_3aT&L1%;a%&cJiLRBFWu!&Wlm%O>$>+EYA]nJ,Dc~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [100.0 140.0 130.0 170.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
100.000 144.000 m
100.000 166.000 l
100.000 168.209 101.791 170.000 104.000 170.000  c
126.000 170.000 l
128.209 170.000 130.000 168.209 130.000 166.000  c
130.000 144.000 l
130.000 141.791 128.209 140.000 126.000 140.000  c
104.000 140.000 l
101.791 140.000 100.000 141.791 100.000 144.000  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
100.000 144.000 m
100.000 166.000 l
100.000 168.209 101.791 170.000 104.000 170.000  c
126.000 170.000 l
128.209 170.000 130.000 168.209 130.000 166.000  c
130.000 144.000 l
130.000 141.791 128.209 140.000 126.000 140.000  c
104.000 140.000 l
101.791 140.000 100.000 141.791 100.000 144.000  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
116.410 154.242 m
117.160 154.409 117.749 154.747 118.176 155.258  c
118.603 155.768 118.816 156.398 118.816 157.148  c
118.816 158.294 118.421 159.185 117.629 159.820  c
116.837 160.456 115.712 160.773 114.254 160.773  c
113.764 160.773 113.259 160.724 112.738 160.625  c
112.217 160.526 111.681 160.378 111.129 160.180  c
111.129 158.664 l
111.566 158.914 112.046 159.104 112.566 159.234  c
113.087 159.365 113.634 159.430 114.207 159.430  c
115.197 159.430 115.949 159.234 116.465 158.844  c
116.980 158.453 117.238 157.888 117.238 157.148  c
117.238 156.461 116.999 155.922 116.520 155.531  c
116.040 155.141 115.368 154.945 114.504 154.945  c
113.145 154.945 l
113.145 153.648 l
114.566 153.648 l
115.348 153.648 115.944 153.495 116.355 153.188  c
116.767 152.880 116.973 152.435 116.973 151.852  c
116.973 151.247 116.759 150.786 116.332 150.469  c
115.905 150.151 115.296 149.992 114.504 149.992  c
114.077 149.992 113.616 150.039 113.121 150.133  c
112.626 150.227 112.082 150.372 111.488 150.570  c
111.488 149.164 l
112.082 148.997 112.642 148.872 113.168 148.789  c
113.694 148.706 114.186 148.664 114.645 148.664  c
115.842 148.664 116.790 148.935 117.488 149.477  c
118.186 150.018 118.535 150.753 118.535 151.680  c
118.535 152.326 118.350 152.872 117.980 153.320  c
117.611 153.768 117.087 154.076 116.410 154.242  c
h
f
2 J
10.0000 M
Q
q
q
[ 51.0000 0.00000 0.00000 51.0000 142.000 132.000 ] concat
<<
/ImageType 1
/Width 51  /Height 51
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [51 0 0 51 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/gfhTCL'SbNFI?[/-!OV2P;BRM:+?KU7#6>"C0VRI2SZ*sUq<uY]s"$MskAntude\;OT?gk'IEK\U
5kDr-bgYfu3#k,bg<3*A_gr"jg7G5U&89hcG-tL*(5r!9r[o^1+i&X5'/FqA@mh>ua5(XB>V7Cfa`'6+
G.X;?k=o!qp3Jk]csT2+n4'sE,*k%jK0cQgW`H0s;Q3bL^<2=8#dmhF)YP<&?bYO!Vp#.k-8,Xa7K[6d
T22:]03:;`QO$9_dr:u5[LJY5132fBM/k<We*3+`huJ_Vj+^u1,*=6U&K?^!'8]+(PCX#X5#%^VmYrr,
lh-^Bk[6$0_c8Z9%Klio$6hSL%,qh:e;^&[7O,W6&R65a+K7&CA6,**3_6Bg556;6;)_ZTWDr`m52E"?
mYrr/$n(M"RPPnY8]lK",>HWD8XX5:%u>lnhDh_'LQ#B%V2]2!g6adqNG2nVQo:h$Bk.1Z(a7m'57f_+
IuU_kn=Q=aLR#oD0kX-/Qcj2%lnndn]g2pX6EsXOeWMM@*M4q*rVG[CQ0`p8It^4?9ou*c%&sU8j[pk`
0^JE.GWai!2P,l`DrM0-$0$rU)/>mH\B8Ei0\c!gCc5c:pN0IK@jZ(0[V`o*7s`<oR'Ip%"Q;U]2Oh(k
lg;P<g4$g"$/gg0W'"!e>ugMLU6p*0E1l.s148hOMu04TDra@36*\gq':GAHK`Hl7JLPSk]!!%j;/IY2
.2>?A'g^bP6%c.WmC_3aT&L1%;a%&cJiLRBFWu!&Wlm%O>$>+EYA]nJ,Dc~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [150.0 140.0 180.0 170.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
150.000 144.000 m
150.000 166.000 l
150.000 168.209 151.791 170.000 154.000 170.000  c
176.000 170.000 l
178.209 170.000 180.000 168.209 180.000 166.000  c
180.000 144.000 l
180.000 141.791 178.209 140.000 176.000 140.000  c
154.000 140.000 l
151.791 140.000 150.000 141.791 150.000 144.000  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
150.000 144.000 m
150.000 166.000 l
150.000 168.209 151.791 170.000 154.000 170.000  c
176.000 170.000 l
178.209 170.000 180.000 168.209 180.000 166.000  c
180.000 144.000 l
180.000 141.791 178.209 140.000 176.000 140.000  c
154.000 140.000 l
151.791 140.000 150.000 141.791 150.000 144.000  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
165.957 150.242 m
161.973 156.477 l
165.957 156.477 l
165.957 150.242 l
h
165.551 148.867 m
167.535 148.867 l
167.535 156.477 l
169.191 156.477 l
169.191 157.789 l
167.535 157.789 l
167.535 160.539 l
165.957 160.539 l
165.957 157.789 l
160.691 157.789 l
160.691 156.258 l
165.551 148.867 l
h
f
2 J
10.0000 M
Q
0 J
1.45000 M
newpath
34.6411 100.005 m
20.3610 139.989 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
45.3589 100.005 m
59.6390 139.989 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
79.2822 30.0049 m
50.7221 69.9891 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
100.718 30.0049 m
129.278 69.9891 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
134.641 100.005 m
120.361 139.989 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
145.359 100.005 m
159.639 139.989 l
S
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
