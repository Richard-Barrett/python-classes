%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 376 352
%%Creator: yExport 1.3
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, November 5, 2012 10:59:15 PM EET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
376 352 setpagesize
0 0 0 0 setmargins
0 0 setorigin
376 352 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
376.000 0.00000 l
376.000 352.000 l
0.00000 352.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 376 352 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -128.000 -149.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
128.000 149.000 m
504.000 149.000 l
504.000 501.000 l
128.000 501.000 l
128.000 149.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -128.000 -149.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -128.000 -149.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -128.000 -149.000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
[ 103.000 0.00000 0.00000 92.0000 310.000 156.000 ] concat
<<
/ImageType 1
/Width 103  /Height 92
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [103 0 0 92 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/kgJ1pL'Li'%Ip0Yi7VK?t9=[J&JsEB6X.VckWu^^u6IM4<PbuQGNq]lD3LFT#T%;)C0ub&?G0fdO
oC"W06=cXIUcZuCRB+kQ\Qo,[AJ$+`1bt5Y]X#,I>o^^q%hB2Wg$JG+p?(N"B8DY-FCZXGGtC_R5oO)n
5!I9ToBC@CH$MCkO8JnTq>'iI&0]Y50H_T3a\-Bb)`?Y+^?$^ZNCLTfn)WQ*?E[G2eaFYJ0%..2/Wuig
eBBHJ[[L.WR[2s''2D>!3V2IuW)+miHf]$F7%oLW+rNu+l#]J@W,fkrQPS,1l+Xa?_E@"#i8NX'3h9$B
;I;bD>a\84S'@6k-1[4fljOfoM(akCm-a9OiCmgZ;Sh#brr1d2hWI-I=sB*E*o?*"F#o^_0L0nm9&fuK
RER"%,EpDPdP6d\'KUK6Di@]&fc1KW9IT"Z09$@!bE+Z:XtoJD"T08>44?D!C"+B"cVkSX.e"fRON(MK
bOP\1eS6s7Mi"8:=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7m
J>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQS
RXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IR&&V=@-aTSZ$6WRStN<[\[Ip%i&MQqjP`8R&A"CGZsK@PO(g
E+%>T8=*!s%h9(AV,FYQ*0!Fofe!.%[.VkXa^ih7[>p</Ze6m@j30p$OH,dkE]N^!g[0oWMu3DKXe]g:
2e9^dO#Qp$%Mq0\Z#[BKhQsPplg*m4I(n,4dcakm(27qQ*R;JcF3;/Y6\J\YK8_)CG.W^c[YluoAQp]$
49p,K4H3q#CTg^TJjeDlUa%*U0h,o`a5<W%=glBjcKQfK%>Vi75B(k/Mf`Lj7O#%?jE@kJfVYK=2n*8'
M)nU,a4j*^o"JabpWM:qmqClE:[0]?8/H,)hpnn)[D9$"Ppg.$0uj.9+-OT!ao~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [318.0 164.0 400.0 235.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
318.000 168.000 m
318.000 231.000 l
318.000 233.209 319.791 235.000 322.000 235.000  c
396.000 235.000 l
398.209 235.000 400.000 233.209 400.000 231.000  c
400.000 168.000 l
400.000 165.791 398.209 164.000 396.000 164.000  c
322.000 164.000 l
319.791 164.000 318.000 165.791 318.000 168.000  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
318.000 168.000 m
318.000 231.000 l
318.000 233.209 319.791 235.000 322.000 235.000  c
396.000 235.000 l
398.209 235.000 400.000 233.209 400.000 231.000  c
400.000 168.000 l
400.000 165.791 398.209 164.000 396.000 164.000  c
322.000 164.000 l
319.791 164.000 318.000 165.791 318.000 168.000  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
333.537 194.144 m
339.990 194.144 l
339.990 195.300 l
334.912 195.300 l
334.912 198.331 l
339.771 198.331 l
339.771 199.487 l
334.912 199.487 l
334.912 203.190 l
340.115 203.190 l
340.115 204.347 l
333.537 204.347 l
333.537 194.144 l
h
349.802 193.722 m
349.187 194.774 348.731 195.813 348.435 196.839  c
348.138 197.865 347.989 198.904 347.989 199.956  c
347.989 201.008 348.140 202.050 348.442 203.081  c
348.744 204.112 349.198 205.149 349.802 206.190  c
348.708 206.190 l
348.021 205.118 347.507 204.065 347.169 203.034  c
346.830 202.003 346.661 200.977 346.661 199.956  c
346.661 198.935 346.830 197.909 347.169 196.878  c
347.507 195.847 348.021 194.795 348.708 193.722  c
349.802 193.722 l
h
353.670 195.269 m
353.670 203.206 l
355.342 203.206 l
356.748 203.206 357.779 202.888 358.436 202.253  c
359.092 201.618 359.420 200.612 359.420 199.237  c
359.420 197.862 359.092 196.857 358.436 196.222  c
357.779 195.586 356.748 195.269 355.342 195.269  c
353.670 195.269 l
h
352.295 194.144 m
355.139 194.144 l
357.107 194.144 358.555 194.555 359.482 195.378  c
360.410 196.201 360.873 197.487 360.873 199.237  c
360.873 200.998 360.410 202.289 359.482 203.112  c
358.555 203.935 357.107 204.347 355.139 204.347  c
352.295 204.347 l
352.295 194.144 l
h
363.341 202.612 m
364.778 202.612 l
364.778 203.784 l
363.669 205.972 l
362.778 205.972 l
363.341 203.784 l
363.341 202.612 l
h
379.616 194.925 m
379.616 196.378 l
379.147 195.951 378.650 195.631 378.124 195.417  c
377.598 195.203 377.043 195.097 376.460 195.097  c
375.293 195.097 374.400 195.453 373.780 196.167  c
373.160 196.881 372.851 197.909 372.851 199.253  c
372.851 200.597 373.160 201.625 373.780 202.339  c
374.400 203.052 375.293 203.409 376.460 203.409  c
377.043 203.409 377.598 203.302 378.124 203.089  c
378.650 202.875 379.147 202.550 379.616 202.112  c
379.616 203.565 l
379.137 203.888 378.627 204.133 378.085 204.300  c
377.543 204.466 376.970 204.550 376.366 204.550  c
374.825 204.550 373.608 204.076 372.718 203.128  c
371.827 202.180 371.382 200.888 371.382 199.253  c
371.382 197.618 371.827 196.326 372.718 195.378  c
373.608 194.430 374.825 193.956 376.366 193.956  c
376.981 193.956 377.559 194.037 378.101 194.198  c
378.642 194.360 379.147 194.602 379.616 194.925  c
h
381.501 193.722 m
382.595 193.722 l
383.272 194.795 383.782 195.847 384.126 196.878  c
384.470 197.909 384.642 198.935 384.642 199.956  c
384.642 200.977 384.470 202.003 384.126 203.034  c
383.782 204.065 383.272 205.118 382.595 206.190  c
381.501 206.190 l
382.105 205.149 382.556 204.112 382.853 203.081  c
383.149 202.050 383.298 201.008 383.298 199.956  c
383.298 198.904 383.149 197.865 382.853 196.839  c
382.556 195.813 382.105 194.774 381.501 193.722  c
h
f
2 J
10.0000 M
Q
q
q
[ 103.000 0.00000 0.00000 92.0000 310.000 406.500 ] concat
<<
/ImageType 1
/Width 103  /Height 92
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [103 0 0 92 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/kgJ1pL'Li'%Ip0Yi7VK?t9=[J&JsEB6X.VckWu^^u6IM4<PbuQGNq]lD3LFT#T%;)C0ub&?G0fdO
oC"W06=cXIUcZuCRB+kQ\Qo,[AJ$+`1bt5Y]X#,I>o^^q%hB2Wg$JG+p?(N"B8DY-FCZXGGtC_R5oO)n
5!I9ToBC@CH$MCkO8JnTq>'iI&0]Y50H_T3a\-Bb)`?Y+^?$^ZNCLTfn)WQ*?E[G2eaFYJ0%..2/Wuig
eBBHJ[[L.WR[2s''2D>!3V2IuW)+miHf]$F7%oLW+rNu+l#]J@W,fkrQPS,1l+Xa?_E@"#i8NX'3h9$B
;I;bD>a\84S'@6k-1[4fljOfoM(akCm-a9OiCmgZ;Sh#brr1d2hWI-I=sB*E*o?*"F#o^_0L0nm9&fuK
RER"%,EpDPdP6d\'KUK6Di@]&fc1KW9IT"Z09$@!bE+Z:XtoJD"T08>44?D!C"+B"cVkSX.e"fRON(MK
bOP\1eS6s7Mi"8:=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7m
J>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQS
RXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IR&&V=@-aTSZ$6WRStN<[\[Ip%i&MQqjP`8R&A"CGZsK@PO(g
E+%>T8=*!s%h9(AV,FYQ*0!Fofe!.%[.VkXa^ih7[>p</Ze6m@j30p$OH,dkE]N^!g[0oWMu3DKXe]g:
2e9^dO#Qp$%Mq0\Z#[BKhQsPplg*m4I(n,4dcakm(27qQ*R;JcF3;/Y6\J\YK8_)CG.W^c[YluoAQp]$
49p,K4H3q#CTg^TJjeDlUa%*U0h,o`a5<W%=glBjcKQfK%>Vi75B(k/Mf`Lj7O#%?jE@kJfVYK=2n*8'
M)nU,a4j*^o"JabpWM:qmqClE:[0]?8/H,)hpnn)[D9$"Ppg.$0uj.9+-OT!ao~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [318.0 414.5 400.0 485.5]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
318.000 418.500 m
318.000 481.500 l
318.000 483.709 319.791 485.500 322.000 485.500  c
396.000 485.500 l
398.209 485.500 400.000 483.709 400.000 481.500  c
400.000 418.500 l
400.000 416.291 398.209 414.500 396.000 414.500  c
322.000 414.500 l
319.791 414.500 318.000 416.291 318.000 418.500  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
318.000 418.500 m
318.000 481.500 l
318.000 483.709 319.791 485.500 322.000 485.500  c
396.000 485.500 l
398.209 485.500 400.000 483.709 400.000 481.500  c
400.000 418.500 l
400.000 416.291 398.209 414.500 396.000 414.500  c
322.000 414.500 l
319.791 414.500 318.000 416.291 318.000 418.500  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
329.915 449.972 m
329.915 453.706 l
332.134 453.706 l
332.873 453.706 333.423 453.552 333.782 453.245  c
334.142 452.938 334.321 452.466 334.321 451.831  c
334.321 451.196 334.142 450.727 333.782 450.425  c
333.423 450.123 332.873 449.972 332.134 449.972  c
329.915 449.972 l
h
329.915 445.769 m
329.915 448.847 l
331.962 448.847 l
332.639 448.847 333.142 448.722 333.470 448.472  c
333.798 448.222 333.962 447.836 333.962 447.315  c
333.962 446.795 333.798 446.407 333.470 446.151  c
333.142 445.896 332.639 445.769 331.962 445.769  c
329.915 445.769 l
h
328.540 444.644 m
332.071 444.644 l
333.123 444.644 333.933 444.862 334.501 445.300  c
335.069 445.737 335.353 446.357 335.353 447.159  c
335.353 447.784 335.207 448.282 334.915 448.651  c
334.623 449.021 334.196 449.253 333.634 449.347  c
334.311 449.493 334.837 449.797 335.212 450.261  c
335.587 450.724 335.774 451.300 335.774 451.987  c
335.774 452.904 335.465 453.610 334.845 454.104  c
334.225 454.599 333.342 454.847 332.196 454.847  c
328.540 454.847 l
328.540 444.644 l
h
341.113 444.222 m
340.499 445.274 340.043 446.313 339.746 447.339  c
339.449 448.365 339.301 449.404 339.301 450.456  c
339.301 451.508 339.452 452.550 339.754 453.581  c
340.056 454.612 340.509 455.649 341.113 456.690  c
340.020 456.690 l
339.332 455.618 338.819 454.565 338.480 453.534  c
338.142 452.503 337.973 451.477 337.973 450.456  c
337.973 449.435 338.142 448.409 338.480 447.378  c
338.819 446.347 339.332 445.295 340.020 444.222  c
341.113 444.222 l
h
346.513 448.065 m
345.846 448.065 345.315 448.328 344.919 448.854  c
344.523 449.381 344.325 450.102 344.325 451.019  c
344.325 451.935 344.521 452.657 344.911 453.183  c
345.302 453.709 345.836 453.972 346.513 453.972  c
347.190 453.972 347.724 453.709 348.114 453.183  c
348.505 452.657 348.700 451.935 348.700 451.019  c
348.700 450.112 348.505 449.394 348.114 448.862  c
347.724 448.331 347.190 448.065 346.513 448.065  c
h
346.513 447.003 m
347.606 447.003 348.466 447.360 349.091 448.073  c
349.716 448.787 350.028 449.769 350.028 451.019  c
350.028 452.279 349.716 453.266 349.091 453.979  c
348.466 454.693 347.606 455.050 346.513 455.050  c
345.419 455.050 344.560 454.693 343.935 453.979  c
343.310 453.266 342.997 452.279 342.997 451.019  c
342.997 449.769 343.310 448.787 343.935 448.073  c
344.560 447.360 345.419 447.003 346.513 447.003  c
h
357.609 451.019 m
357.609 450.102 357.419 449.381 357.039 448.854  c
356.659 448.328 356.135 448.065 355.469 448.065  c
354.802 448.065 354.279 448.328 353.898 448.854  c
353.518 449.381 353.328 450.102 353.328 451.019  c
353.328 451.946 353.518 452.672 353.898 453.198  c
354.279 453.724 354.802 453.987 355.469 453.987  c
356.135 453.987 356.659 453.724 357.039 453.198  c
357.419 452.672 357.609 451.946 357.609 451.019  c
h
353.328 448.347 m
353.599 447.899 353.935 447.563 354.336 447.339  c
354.737 447.115 355.219 447.003 355.781 447.003  c
356.708 447.003 357.464 447.373 358.047 448.112  c
358.630 448.852 358.922 449.821 358.922 451.019  c
358.922 452.227 358.630 453.201 358.047 453.940  c
357.464 454.680 356.708 455.050 355.781 455.050  c
355.219 455.050 354.737 454.938 354.336 454.714  c
353.935 454.490 353.599 454.149 353.328 453.690  c
353.328 454.847 l
352.062 454.847 l
352.062 444.206 l
353.328 444.206 l
353.328 448.347 l
h
360.996 447.190 m
362.262 447.190 l
362.262 454.987 l
362.262 455.956 362.077 456.659 361.707 457.097  c
361.337 457.534 360.736 457.753 359.902 457.753  c
359.434 457.753 l
359.434 456.690 l
359.762 456.690 l
360.241 456.690 360.566 456.581 360.738 456.362  c
360.910 456.144 360.996 455.685 360.996 454.987  c
360.996 447.190 l
h
360.996 444.206 m
362.262 444.206 l
362.262 445.800 l
360.996 445.800 l
360.996 444.206 l
h
371.448 450.706 m
371.448 451.315 l
365.651 451.315 l
365.714 452.180 365.977 452.839 366.440 453.292  c
366.904 453.745 367.552 453.972 368.386 453.972  c
368.875 453.972 369.347 453.914 369.800 453.800  c
370.253 453.685 370.703 453.508 371.151 453.269  c
371.151 454.456 l
370.693 454.644 370.227 454.789 369.753 454.894  c
369.279 454.998 368.802 455.050 368.323 455.050  c
367.094 455.050 366.123 454.693 365.409 453.979  c
364.696 453.266 364.339 452.305 364.339 451.097  c
364.339 449.836 364.677 448.839 365.354 448.104  c
366.032 447.370 366.948 447.003 368.104 447.003  c
369.136 447.003 369.951 447.334 370.550 447.995  c
371.149 448.657 371.448 449.560 371.448 450.706  c
h
370.183 450.331 m
370.172 449.644 369.979 449.094 369.604 448.683  c
369.229 448.271 368.735 448.065 368.120 448.065  c
367.412 448.065 366.847 448.266 366.425 448.667  c
366.003 449.068 365.761 449.628 365.698 450.347  c
370.183 450.331 l
h
379.015 447.487 m
379.015 448.659 l
378.660 448.461 378.304 448.313 377.944 448.214  c
377.585 448.115 377.223 448.065 376.858 448.065  c
376.046 448.065 375.413 448.326 374.960 448.847  c
374.507 449.368 374.280 450.091 374.280 451.019  c
374.280 451.956 374.507 452.683 374.960 453.198  c
375.413 453.714 376.046 453.972 376.858 453.972  c
377.223 453.972 377.585 453.925 377.944 453.831  c
378.304 453.737 378.660 453.591 379.015 453.394  c
379.015 454.550 l
378.660 454.716 378.296 454.841 377.921 454.925  c
377.546 455.008 377.150 455.050 376.733 455.050  c
375.577 455.050 374.658 454.688 373.976 453.964  c
373.293 453.240 372.952 452.258 372.952 451.019  c
372.952 449.779 373.296 448.800 373.983 448.081  c
374.671 447.362 375.614 447.003 376.812 447.003  c
377.197 447.003 377.575 447.042 377.944 447.120  c
378.314 447.198 378.671 447.321 379.015 447.487  c
h
382.446 445.019 m
382.446 447.190 l
385.040 447.190 l
385.040 448.175 l
382.446 448.175 l
382.446 452.331 l
382.446 452.946 382.532 453.344 382.704 453.526  c
382.876 453.709 383.222 453.800 383.743 453.800  c
385.040 453.800 l
385.040 454.847 l
383.743 454.847 l
382.774 454.847 382.105 454.664 381.735 454.300  c
381.366 453.935 381.181 453.279 381.181 452.331  c
381.181 448.175 l
380.259 448.175 l
380.259 447.190 l
381.181 447.190 l
381.181 445.019 l
382.446 445.019 l
h
386.498 444.222 m
387.592 444.222 l
388.269 445.295 388.779 446.347 389.123 447.378  c
389.467 448.409 389.639 449.435 389.639 450.456  c
389.639 451.477 389.467 452.503 389.123 453.534  c
388.779 454.565 388.269 455.618 387.592 456.690  c
386.498 456.690 l
387.102 455.649 387.553 454.612 387.850 453.581  c
388.146 452.550 388.295 451.508 388.295 450.456  c
388.295 449.404 388.146 448.365 387.850 447.339  c
387.553 446.313 387.102 445.274 386.498 444.222  c
h
f
2 J
10.0000 M
Q
q
q
[ 103.000 0.00000 0.00000 92.0000 399.000 286.500 ] concat
<<
/ImageType 1
/Width 103  /Height 92
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [103 0 0 92 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/kgJ1pL'Li'%Ip0Yi7VK?t9=[J&JsEB6X.VckWu^^u6IM4<PbuQGNq]lD3LFT#T%;)C0ub&?G0fdO
oC"W06=cXIUcZuCRB+kQ\Qo,[AJ$+`1bt5Y]X#,I>o^^q%hB2Wg$JG+p?(N"B8DY-FCZXGGtC_R5oO)n
5!I9ToBC@CH$MCkO8JnTq>'iI&0]Y50H_T3a\-Bb)`?Y+^?$^ZNCLTfn)WQ*?E[G2eaFYJ0%..2/Wuig
eBBHJ[[L.WR[2s''2D>!3V2IuW)+miHf]$F7%oLW+rNu+l#]J@W,fkrQPS,1l+Xa?_E@"#i8NX'3h9$B
;I;bD>a\84S'@6k-1[4fljOfoM(akCm-a9OiCmgZ;Sh#brr1d2hWI-I=sB*E*o?*"F#o^_0L0nm9&fuK
RER"%,EpDPdP6d\'KUK6Di@]&fc1KW9IT"Z09$@!bE+Z:XtoJD"T08>44?D!C"+B"cVkSX.e"fRON(MK
bOP\1eS6s7Mi"8:=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7m
J>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQS
RXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IR&&V=@-aTSZ$6WRStN<[\[Ip%i&MQqjP`8R&A"CGZsK@PO(g
E+%>T8=*!s%h9(AV,FYQ*0!Fofe!.%[.VkXa^ih7[>p</Ze6m@j30p$OH,dkE]N^!g[0oWMu3DKXe]g:
2e9^dO#Qp$%Mq0\Z#[BKhQsPplg*m4I(n,4dcakm(27qQ*R;JcF3;/Y6\J\YK8_)CG.W^c[YluoAQp]$
49p,K4H3q#CTg^TJjeDlUa%*U0h,o`a5<W%=glBjcKQfK%>Vi75B(k/Mf`Lj7O#%?jE@kJfVYK=2n*8'
M)nU,a4j*^o"JabpWM:qmqClE:[0]?8/H,)hpnn)[D9$"Ppg.$0uj.9+-OT!ao~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [407.0 294.5 489.0 365.5]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
407.000 298.500 m
407.000 361.500 l
407.000 363.709 408.791 365.500 411.000 365.500  c
485.000 365.500 l
487.209 365.500 489.000 363.709 489.000 361.500  c
489.000 298.500 l
489.000 296.291 487.209 294.500 485.000 294.500  c
411.000 294.500 l
408.791 294.500 407.000 296.291 407.000 298.500  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
407.000 298.500 m
407.000 361.500 l
407.000 363.709 408.791 365.500 411.000 365.500  c
485.000 365.500 l
487.209 365.500 489.000 363.709 489.000 361.500  c
489.000 298.500 l
489.000 296.291 487.209 294.500 485.000 294.500  c
411.000 294.500 l
408.791 294.500 407.000 296.291 407.000 298.500  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
441.864 325.425 m
441.864 326.878 l
441.395 326.451 440.898 326.131 440.372 325.917  c
439.846 325.703 439.291 325.597 438.708 325.597  c
437.541 325.597 436.648 325.953 436.028 326.667  c
435.408 327.381 435.098 328.409 435.098 329.753  c
435.098 331.097 435.408 332.125 436.028 332.839  c
436.648 333.552 437.541 333.909 438.708 333.909  c
439.291 333.909 439.846 333.802 440.372 333.589  c
440.898 333.375 441.395 333.050 441.864 332.612  c
441.864 334.065 l
441.385 334.388 440.874 334.633 440.333 334.800  c
439.791 334.966 439.218 335.050 438.614 335.050  c
437.072 335.050 435.856 334.576 434.965 333.628  c
434.075 332.680 433.629 331.388 433.629 329.753  c
433.629 328.118 434.075 326.826 434.965 325.878  c
435.856 324.930 437.072 324.456 438.614 324.456  c
439.228 324.456 439.806 324.537 440.348 324.698  c
440.890 324.860 441.395 325.102 441.864 325.425  c
h
446.967 324.222 m
446.353 325.274 445.897 326.313 445.600 327.339  c
445.303 328.365 445.155 329.404 445.155 330.456  c
445.155 331.508 445.306 332.550 445.608 333.581  c
445.910 334.612 446.363 335.649 446.967 336.690  c
445.874 336.690 l
445.186 335.618 444.673 334.565 444.334 333.534  c
443.996 332.503 443.827 331.477 443.827 330.456  c
443.827 329.435 443.996 328.409 444.334 327.378  c
444.673 326.347 445.186 325.295 445.874 324.222  c
446.967 324.222 l
h
450.835 329.972 m
450.835 333.706 l
453.054 333.706 l
453.794 333.706 454.343 333.552 454.703 333.245  c
455.062 332.938 455.242 332.466 455.242 331.831  c
455.242 331.196 455.062 330.727 454.703 330.425  c
454.343 330.123 453.794 329.972 453.054 329.972  c
450.835 329.972 l
h
450.835 325.769 m
450.835 328.847 l
452.882 328.847 l
453.559 328.847 454.062 328.722 454.390 328.472  c
454.718 328.222 454.882 327.836 454.882 327.315  c
454.882 326.795 454.718 326.407 454.390 326.151  c
454.062 325.896 453.559 325.769 452.882 325.769  c
450.835 325.769 l
h
449.460 324.644 m
452.992 324.644 l
454.044 324.644 454.854 324.862 455.421 325.300  c
455.989 325.737 456.273 326.357 456.273 327.159  c
456.273 327.784 456.127 328.282 455.835 328.651  c
455.544 329.021 455.117 329.253 454.554 329.347  c
455.231 329.493 455.757 329.797 456.132 330.261  c
456.507 330.724 456.695 331.300 456.695 331.987  c
456.695 332.904 456.385 333.610 455.765 334.104  c
455.145 334.599 454.263 334.847 453.117 334.847  c
449.460 334.847 l
449.460 324.644 l
h
458.815 324.222 m
459.909 324.222 l
460.586 325.295 461.096 326.347 461.440 327.378  c
461.784 328.409 461.956 329.435 461.956 330.456  c
461.956 331.477 461.784 332.503 461.440 333.534  c
461.096 334.565 460.586 335.618 459.909 336.690  c
458.815 336.690 l
459.419 335.649 459.870 334.612 460.167 333.581  c
460.463 332.550 460.612 331.508 460.612 330.456  c
460.612 329.404 460.463 328.365 460.167 327.339  c
459.870 326.313 459.419 325.274 458.815 324.222  c
h
f
2 J
10.0000 M
Q
q
q
[ 103.000 0.00000 0.00000 92.0000 221.000 286.500 ] concat
<<
/ImageType 1
/Width 103  /Height 92
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [103 0 0 92 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/kgJ1pL'Li'%Ip0Yi7VK?t9=[J&JsEB6X.VckWu^^u6IM4<PbuQGNq]lD3LFT#T%;)C0ub&?G0fdO
oC"W06=cXIUcZuCRB+kQ\Qo,[AJ$+`1bt5Y]X#,I>o^^q%hB2Wg$JG+p?(N"B8DY-FCZXGGtC_R5oO)n
5!I9ToBC@CH$MCkO8JnTq>'iI&0]Y50H_T3a\-Bb)`?Y+^?$^ZNCLTfn)WQ*?E[G2eaFYJ0%..2/Wuig
eBBHJ[[L.WR[2s''2D>!3V2IuW)+miHf]$F7%oLW+rNu+l#]J@W,fkrQPS,1l+Xa?_E@"#i8NX'3h9$B
;I;bD>a\84S'@6k-1[4fljOfoM(akCm-a9OiCmgZ;Sh#brr1d2hWI-I=sB*E*o?*"F#o^_0L0nm9&fuK
RER"%,EpDPdP6d\'KUK6Di@]&fc1KW9IT"Z09$@!bE+Z:XtoJD"T08>44?D!C"+B"cVkSX.e"fRON(MK
bOP\1eS6s7Mi"8:=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7m
J>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQS
RXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IR&&V=@-aTSZ$6WRStN<[\[Ip%i&MQqjP`8R&A"CGZsK@PO(g
E+%>T8=*!s%h9(AV,FYQ*0!Fofe!.%[.VkXa^ih7[>p</Ze6m@j30p$OH,dkE]N^!g[0oWMu3DKXe]g:
2e9^dO#Qp$%Mq0\Z#[BKhQsPplg*m4I(n,4dcakm(27qQ*R;JcF3;/Y6\J\YK8_)CG.W^c[YluoAQp]$
49p,K4H3q#CTg^TJjeDlUa%*U0h,o`a5<W%=glBjcKQfK%>Vi75B(k/Mf`Lj7O#%?jE@kJfVYK=2n*8'
M)nU,a4j*^o"JabpWM:qmqClE:[0]?8/H,)hpnn)[D9$"Ppg.$0uj.9+-OT!ao~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [229.0 294.5 311.0 365.5]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
229.000 298.500 m
229.000 361.500 l
229.000 363.709 230.791 365.500 233.000 365.500  c
307.000 365.500 l
309.209 365.500 311.000 363.709 311.000 361.500  c
311.000 298.500 l
311.000 296.291 309.209 294.500 307.000 294.500  c
233.000 294.500 l
230.791 294.500 229.000 296.291 229.000 298.500  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
229.000 298.500 m
229.000 361.500 l
229.000 363.709 230.791 365.500 233.000 365.500  c
307.000 365.500 l
309.209 365.500 311.000 363.709 311.000 361.500  c
311.000 298.500 l
311.000 296.291 309.209 294.500 307.000 294.500  c
233.000 294.500 l
230.791 294.500 229.000 296.291 229.000 298.500  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
247.857 325.769 m
247.857 333.706 l
249.529 333.706 l
250.935 333.706 251.966 333.388 252.623 332.753  c
253.279 332.118 253.607 331.112 253.607 329.737  c
253.607 328.362 253.279 327.357 252.623 326.722  c
251.966 326.086 250.935 325.769 249.529 325.769  c
247.857 325.769 l
h
246.482 324.644 m
249.326 324.644 l
251.294 324.644 252.742 325.055 253.669 325.878  c
254.597 326.701 255.060 327.987 255.060 329.737  c
255.060 331.498 254.597 332.789 253.669 333.612  c
252.742 334.435 251.294 334.847 249.326 334.847  c
246.482 334.847 l
246.482 324.644 l
h
260.231 324.222 m
259.616 325.274 259.161 326.313 258.864 327.339  c
258.567 328.365 258.418 329.404 258.418 330.456  c
258.418 331.508 258.569 332.550 258.872 333.581  c
259.174 334.612 259.627 335.649 260.231 336.690  c
259.137 336.690 l
258.450 335.618 257.937 334.565 257.598 333.534  c
257.260 332.503 257.090 331.477 257.090 330.456  c
257.090 329.435 257.260 328.409 257.598 327.378  c
257.937 326.347 258.450 325.295 259.137 324.222  c
260.231 324.222 l
h
266.130 326.003 m
264.255 331.081 l
268.021 331.081 l
266.130 326.003 l
h
265.349 324.644 m
266.927 324.644 l
270.818 334.847 l
269.380 334.847 l
268.443 332.222 l
263.849 332.222 l
262.912 334.847 l
261.458 334.847 l
265.349 324.644 l
h
272.567 333.112 m
274.004 333.112 l
274.004 334.284 l
272.895 336.472 l
272.004 336.472 l
272.567 334.284 l
272.567 333.112 l
h
282.577 329.972 m
282.577 333.706 l
284.795 333.706 l
285.535 333.706 286.084 333.552 286.444 333.245  c
286.803 332.938 286.983 332.466 286.983 331.831  c
286.983 331.196 286.803 330.727 286.444 330.425  c
286.084 330.123 285.535 329.972 284.795 329.972  c
282.577 329.972 l
h
282.577 325.769 m
282.577 328.847 l
284.624 328.847 l
285.301 328.847 285.803 328.722 286.131 328.472  c
286.459 328.222 286.624 327.836 286.624 327.315  c
286.624 326.795 286.459 326.407 286.131 326.151  c
285.803 325.896 285.301 325.769 284.624 325.769  c
282.577 325.769 l
h
281.202 324.644 m
284.733 324.644 l
285.785 324.644 286.595 324.862 287.163 325.300  c
287.730 325.737 288.014 326.357 288.014 327.159  c
288.014 327.784 287.868 328.282 287.577 328.651  c
287.285 329.021 286.858 329.253 286.295 329.347  c
286.972 329.493 287.499 329.797 287.874 330.261  c
288.249 330.724 288.436 331.300 288.436 331.987  c
288.436 332.904 288.126 333.610 287.506 334.104  c
286.887 334.599 286.004 334.847 284.858 334.847  c
281.202 334.847 l
281.202 324.644 l
h
290.556 324.222 m
291.650 324.222 l
292.327 325.295 292.837 326.347 293.181 327.378  c
293.525 328.409 293.697 329.435 293.697 330.456  c
293.697 331.477 293.525 332.503 293.181 333.534  c
292.837 334.565 292.327 335.618 291.650 336.690  c
290.556 336.690 l
291.160 335.649 291.611 334.612 291.908 333.581  c
292.205 332.550 292.353 331.508 292.353 330.456  c
292.353 329.404 292.205 328.365 291.908 327.339  c
291.611 326.313 291.160 325.274 290.556 324.222  c
h
f
2 J
10.0000 M
Q
q
q
[ 103.000 0.00000 0.00000 92.0000 135.000 406.500 ] concat
<<
/ImageType 1
/Width 103  /Height 92
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [103 0 0 92 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/kgJ1pL'Li'%Ip0Yi7VK?t9=[J&JsEB6X.VckWu^^u6IM4<PbuQGNq]lD3LFT#T%;)C0ub&?G0fdO
oC"W06=cXIUcZuCRB+kQ\Qo,[AJ$+`1bt5Y]X#,I>o^^q%hB2Wg$JG+p?(N"B8DY-FCZXGGtC_R5oO)n
5!I9ToBC@CH$MCkO8JnTq>'iI&0]Y50H_T3a\-Bb)`?Y+^?$^ZNCLTfn)WQ*?E[G2eaFYJ0%..2/Wuig
eBBHJ[[L.WR[2s''2D>!3V2IuW)+miHf]$F7%oLW+rNu+l#]J@W,fkrQPS,1l+Xa?_E@"#i8NX'3h9$B
;I;bD>a\84S'@6k-1[4fljOfoM(akCm-a9OiCmgZ;Sh#brr1d2hWI-I=sB*E*o?*"F#o^_0L0nm9&fuK
RER"%,EpDPdP6d\'KUK6Di@]&fc1KW9IT"Z09$@!bE+Z:XtoJD"T08>44?D!C"+B"cVkSX.e"fRON(MK
bOP\1eS6s7Mi"8:=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7m
J>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IOc:$!<XHV$U7mJ>EQS
RXh4@=IOc:$!<XHV$U7mJ>EQSRXh4@=IR&&V=@-aTSZ$6WRStN<[\[Ip%i&MQqjP`8R&A"CGZsK@PO(g
E+%>T8=*!s%h9(AV,FYQ*0!Fofe!.%[.VkXa^ih7[>p</Ze6m@j30p$OH,dkE]N^!g[0oWMu3DKXe]g:
2e9^dO#Qp$%Mq0\Z#[BKhQsPplg*m4I(n,4dcakm(27qQ*R;JcF3;/Y6\J\YK8_)CG.W^c[YluoAQp]$
49p,K4H3q#CTg^TJjeDlUa%*U0h,o`a5<W%=glBjcKQfK%>Vi75B(k/Mf`Lj7O#%?jE@kJfVYK=2n*8'
M)nU,a4j*^o"JabpWM:qmqClE:[0]?8/H,)hpnn)[D9$"Ppg.$0uj.9+-OT!ao~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [143.0 414.5 225.0 485.5]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
143.000 418.500 m
143.000 481.500 l
143.000 483.709 144.791 485.500 147.000 485.500  c
221.000 485.500 l
223.209 485.500 225.000 483.709 225.000 481.500  c
225.000 418.500 l
225.000 416.291 223.209 414.500 221.000 414.500  c
147.000 414.500 l
144.791 414.500 143.000 416.291 143.000 418.500  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
143.000 418.500 m
143.000 481.500 l
143.000 483.709 144.791 485.500 147.000 485.500  c
221.000 485.500 l
223.209 485.500 225.000 483.709 225.000 481.500  c
225.000 418.500 l
225.000 416.291 223.209 414.500 221.000 414.500  c
147.000 414.500 l
144.791 414.500 143.000 416.291 143.000 418.500  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
0 J
1.45000 M
newpath
156.960 446.003 m
155.085 451.081 l
158.851 451.081 l
156.960 446.003 l
h
156.179 444.644 m
157.757 444.644 l
161.647 454.847 l
160.210 454.847 l
159.272 452.222 l
154.679 452.222 l
153.741 454.847 l
152.288 454.847 l
156.179 444.644 l
h
166.100 444.222 m
165.485 445.274 165.029 446.313 164.732 447.339  c
164.436 448.365 164.287 449.404 164.287 450.456  c
164.287 451.508 164.438 452.550 164.740 453.581  c
165.042 454.612 165.495 455.649 166.100 456.690  c
165.006 456.690 l
164.318 455.618 163.805 454.565 163.467 453.534  c
163.128 452.503 162.959 451.477 162.959 450.456  c
162.959 449.435 163.128 448.409 163.467 447.378  c
163.805 446.347 164.318 445.295 165.006 444.222  c
166.100 444.222 l
h
171.499 448.065 m
170.832 448.065 170.301 448.328 169.905 448.854  c
169.509 449.381 169.312 450.102 169.312 451.019  c
169.312 451.935 169.507 452.657 169.897 453.183  c
170.288 453.709 170.822 453.972 171.499 453.972  c
172.176 453.972 172.710 453.709 173.101 453.183  c
173.491 452.657 173.687 451.935 173.687 451.019  c
173.687 450.112 173.491 449.394 173.101 448.862  c
172.710 448.331 172.176 448.065 171.499 448.065  c
h
171.499 447.003 m
172.593 447.003 173.452 447.360 174.077 448.073  c
174.702 448.787 175.015 449.769 175.015 451.019  c
175.015 452.279 174.702 453.266 174.077 453.979  c
173.452 454.693 172.593 455.050 171.499 455.050  c
170.405 455.050 169.546 454.693 168.921 453.979  c
168.296 453.266 167.983 452.279 167.983 451.019  c
167.983 449.769 168.296 448.787 168.921 448.073  c
169.546 447.360 170.405 447.003 171.499 447.003  c
h
182.596 451.019 m
182.596 450.102 182.406 449.381 182.025 448.854  c
181.645 448.328 181.122 448.065 180.455 448.065  c
179.788 448.065 179.265 448.328 178.885 448.854  c
178.505 449.381 178.314 450.102 178.314 451.019  c
178.314 451.946 178.505 452.672 178.885 453.198  c
179.265 453.724 179.788 453.987 180.455 453.987  c
181.122 453.987 181.645 453.724 182.025 453.198  c
182.406 452.672 182.596 451.946 182.596 451.019  c
h
178.314 448.347 m
178.585 447.899 178.921 447.563 179.322 447.339  c
179.723 447.115 180.205 447.003 180.768 447.003  c
181.695 447.003 182.450 447.373 183.033 448.112  c
183.617 448.852 183.908 449.821 183.908 451.019  c
183.908 452.227 183.617 453.201 183.033 453.940  c
182.450 454.680 181.695 455.050 180.768 455.050  c
180.205 455.050 179.723 454.938 179.322 454.714  c
178.921 454.490 178.585 454.149 178.314 453.690  c
178.314 454.847 l
177.049 454.847 l
177.049 444.206 l
178.314 444.206 l
178.314 448.347 l
h
185.982 447.190 m
187.248 447.190 l
187.248 454.987 l
187.248 455.956 187.063 456.659 186.693 457.097  c
186.324 457.534 185.722 457.753 184.889 457.753  c
184.420 457.753 l
184.420 456.690 l
184.748 456.690 l
185.227 456.690 185.553 456.581 185.725 456.362  c
185.896 456.144 185.982 455.685 185.982 454.987  c
185.982 447.190 l
h
185.982 444.206 m
187.248 444.206 l
187.248 445.800 l
185.982 445.800 l
185.982 444.206 l
h
196.435 450.706 m
196.435 451.315 l
190.638 451.315 l
190.700 452.180 190.963 452.839 191.427 453.292  c
191.890 453.745 192.539 453.972 193.372 453.972  c
193.862 453.972 194.333 453.914 194.786 453.800  c
195.239 453.685 195.690 453.508 196.138 453.269  c
196.138 454.456 l
195.679 454.644 195.213 454.789 194.739 454.894  c
194.265 454.998 193.789 455.050 193.310 455.050  c
192.080 455.050 191.109 454.693 190.396 453.979  c
189.682 453.266 189.325 452.305 189.325 451.097  c
189.325 449.836 189.664 448.839 190.341 448.104  c
191.018 447.370 191.935 447.003 193.091 447.003  c
194.122 447.003 194.937 447.334 195.536 447.995  c
196.135 448.657 196.435 449.560 196.435 450.706  c
h
195.169 450.331 m
195.159 449.644 194.966 449.094 194.591 448.683  c
194.216 448.271 193.721 448.065 193.106 448.065  c
192.398 448.065 191.833 448.266 191.411 448.667  c
190.989 449.068 190.747 449.628 190.685 450.347  c
195.169 450.331 l
h
204.001 447.487 m
204.001 448.659 l
203.647 448.461 203.290 448.313 202.931 448.214  c
202.571 448.115 202.209 448.065 201.845 448.065  c
201.032 448.065 200.399 448.326 199.946 448.847  c
199.493 449.368 199.267 450.091 199.267 451.019  c
199.267 451.956 199.493 452.683 199.946 453.198  c
200.399 453.714 201.032 453.972 201.845 453.972  c
202.209 453.972 202.571 453.925 202.931 453.831  c
203.290 453.737 203.647 453.591 204.001 453.394  c
204.001 454.550 l
203.647 454.716 203.282 454.841 202.907 454.925  c
202.532 455.008 202.136 455.050 201.720 455.050  c
200.563 455.050 199.644 454.688 198.962 453.964  c
198.280 453.240 197.938 452.258 197.938 451.019  c
197.938 449.779 198.282 448.800 198.970 448.081  c
199.657 447.362 200.600 447.003 201.798 447.003  c
202.183 447.003 202.561 447.042 202.931 447.120  c
203.300 447.198 203.657 447.321 204.001 447.487  c
h
207.433 445.019 m
207.433 447.190 l
210.026 447.190 l
210.026 448.175 l
207.433 448.175 l
207.433 452.331 l
207.433 452.946 207.519 453.344 207.690 453.526  c
207.862 453.709 208.209 453.800 208.729 453.800  c
210.026 453.800 l
210.026 454.847 l
208.729 454.847 l
207.761 454.847 207.091 454.664 206.722 454.300  c
206.352 453.935 206.167 453.279 206.167 452.331  c
206.167 448.175 l
205.245 448.175 l
205.245 447.190 l
206.167 447.190 l
206.167 445.019 l
207.433 445.019 l
h
211.484 444.222 m
212.578 444.222 l
213.255 445.295 213.766 446.347 214.109 447.378  c
214.453 448.409 214.625 449.435 214.625 450.456  c
214.625 451.477 214.453 452.503 214.109 453.534  c
213.766 454.565 213.255 455.618 212.578 456.690  c
211.484 456.690 l
212.089 455.649 212.539 454.612 212.836 453.581  c
213.133 452.550 213.281 451.508 213.281 450.456  c
213.281 449.404 213.133 448.365 212.836 447.339  c
212.539 446.313 212.089 445.274 211.484 444.222  c
h
f
2 J
10.0000 M
Q
0 J
1.45000 M
newpath
385.849 235.004 m
426.023 288.129 l
S
newpath
430.848 294.510 m
427.598 281.922 l
425.420 287.331 l
419.622 287.954 l
h
f
2 J
10.0000 M
.200000 .400000 1.00000 RG
3.00000 w
0 J
1.45000 M
newpath
419.217 365.486 m
385.769 406.724 l
S
newpath
379.469 414.490 m
393.772 406.778 l
386.556 405.753 l
384.064 398.903 l
h
f
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
.200000 .400000 1.00000 RG
3.00000 w
0 J
1.45000 M
newpath
334.773 235.024 m
299.845 286.238 l
S
newpath
294.211 294.500 m
307.826 285.629 l
300.549 285.206 l
297.499 278.586 l
h
f
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
299.572 365.486 m
335.287 408.344 l
S
newpath
340.408 414.490 m
336.567 402.070 l
334.647 407.576 l
328.885 408.472 l
h
f
2 J
10.0000 M
.200000 .400000 1.00000 RG
3.00000 w
0 J
1.45000 M
newpath
244.574 365.479 m
215.276 406.359 l
S
newpath
209.451 414.487 m
223.269 405.935 l
216.004 405.343 l
213.109 398.654 l
h
f
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
.200000 .400000 1.00000 RG
3.00000 w
0 J
1.45000 M
newpath
224.979 427.749 m
405.000 330.000 l
406.992 328.755 l
S
newpath
406.992 328.755 m
390.960 331.405 l
397.452 334.717 l
397.585 342.005 l
h
f
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
